
name: Build and Release nexusiq-successmetrics

on:
  push:
    tags:
      - '*'

env:
  IMAGE_NAME: nexusiq-successmetrics
  RELEASE_BRANCH: main

jobs:
    create_release:
        name: create release bundle
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v2

        - name: Download all artifacts
          uses: actions/download-artifact@v2

        - name: Copy reports2 executables
          run: cp reports2-*/* releasefiles/reports2

        - name: Build with Gradle
          run: ./gradlew clean build

        - name: Upload the artifact
          uses: actions/upload-artifact@v2
          with:
            name: successmetrics.jar
            path: build/libs

        - name: Build release with Gradle
          run: ./gradlew release

        - name: Create release
          uses: softprops/action-gh-release@v1
          if: startsWith(github.ref, 'refs/tags/')
          with:
            files: successmetrics-*.zip

    build_docker_image:
        name: build docker image
        runs-on: ubuntu-latest
        steps:

        - uses: actions/checkout@v2

        - name: Cache Gradle packages
          uses: actions/cache@v2
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

        - name: Grant execute permission for gradlew
          run: chmod +x gradlew

        - name: Build with Gradle
          run: |
              # Strip git ref prefix from version
              VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

              # Strip "v" prefix from tag name
              [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
              ./gradlew -Prelversion=$VERSION clean build

        - name: Copy successmetrics jar
          run: cp build/libs/successmetrics-*.jar .

        - name: Build image
          run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

        - name: Log in to registry
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        - name: Push image
          run: |
              IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

              # Change all uppercase to lowercase
              IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

              # Strip git ref prefix from version
              VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

              # Strip "v" prefix from tag name
              [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

              # Use Docker `latest` tag convention
              [ "$VERSION" == "$RELEASE_BRANCH" ] && VERSION=latest

              echo IMAGE_ID=$IMAGE_ID
              echo VERSION=$VERSION

              docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
              docker push $IMAGE_ID:$VERSION
