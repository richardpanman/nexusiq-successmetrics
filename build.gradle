import java.text.SimpleDateFormat
import org.apache.tools.ant.filters.ReplaceTokens 

plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonatype.gradle.plugins.scan' version '1.2.0'
	id "com.palantir.docker" version "0.22.1"
	id "jacoco"
    id "io.freefair.lombok" version "6.3.0"
    id 'nebula.lint' version '17.6.0'
 }

group = 'org.sonatype.cs'
version = '86'
sourceCompatibility = '8'

def applicationname = 'nexusiq-successmetrics'
def packagedir = "successmetrics-${version}"
def releasedir = "${packagedir}/${packagedir}"

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools:2.6.2'

	implementation 'com.github.librepdf:openpdf:1.3.11'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.apache.httpcomponents:httpcore:4.4.14'
	implementation 'org.apache.tomcat.embed:tomcat-embed-core:9.0.54'
	implementation 'org.json:json:20210307'
	implementation 'org.slf4j:slf4j-api:1.7.32'
	implementation 'org.springframework:spring-beans:5.3.12'
	implementation 'org.springframework:spring-context:5.3.12'
	implementation 'org.springframework:spring-jdbc:5.3.12'
	implementation 'org.springframework:spring-web:5.3.12'
	implementation 'org.springframework.boot:spring-boot-autoconfigure:2.5.6'
	implementation 'org.springframework.boot:spring-boot:2.5.6'
	implementation 'org.springframework.data:spring-data-commons:2.5.6'
	implementation 'org.thymeleaf:thymeleaf:3.0.12.RELEASE'
	implementation 'org.xhtmlrenderer:flying-saucer-pdf-openpdf:9.1.20'

	runtimeOnly 'com.h2database:h2:2.0.202'
	runtimeOnly 'com.opencsv:opencsv:5.2'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.3'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-test:2.6.2'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-thymeleaf:2.6.2'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-web:2.6.2'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-webflux:2.6.2'
	runtimeOnly 'org.webjars:bootstrap:4.5.0'
	runtimeOnly 'org.webjars:jquery:3.5.1'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
	testImplementation 'org.springframework.boot:spring-boot-test:2.5.6'
	testImplementation("com.approvaltests:approvaltests:12.4.1")
}

nexusIQScan {
  username = 'admin'
  password = 'admin123'
  serverUrl = 'http://localhost:8070'
  applicationId = 'successmetrics'
  stage = 'build'  
  allConfigurations = true 
}

test {
	useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
	testLogging {
		events "passed", "skipped", "failed"
	}
}

jacocoTestReport {
	reports{
		xml.enabled true
	}
    dependsOn test // tests are required to run before generating the report
}

clean.doFirst {
	delete "${packagedir}"
	delete "${packagedir}.zip"
}

build.doFirst {
	mkdir "${packagedir}"
	mkdir "${releasedir}"
}

task copydependencies(type: Copy) {
  from configurations.default
  into 'build/dependencies'
}

task packagejar (type: Copy) {
  from 'build/libs'
	include "successmetrics-${version}.jar"
  into "${releasedir}"
}

task packagefiles (type: Copy) {
	from 'releasefiles'
	include '*.json'
	include 'create*'
	include 'reports2/'
	include 'config/'
	include 'runapp*'
	into "${releasedir}"
	filter(ReplaceTokens, tokens: [APPVER: project.version])
}

task release(type: Zip) {
	from "${packagedir}"
	archiveName "${packagedir}.zip"
	destinationDir(file(projectDir))
}

docker {
     name "${applicationname}:${project.version}"
     files "${projectDir}/build/libs/successmetrics-*.jar"
}

gradleLint.rules = ['unused-dependency', 'all-nebula-renames', 'archaic-wrapper', 'unused-exclude-by-dep', 'duplicate-dependency-class']


packagejar.dependsOn bootJar
packagefiles.dependsOn packagejar
release.dependsOn packagefiles

